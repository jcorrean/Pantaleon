install.packages("bibliometrix")
install.packages("mclust")
install.packages("topicmodeling}")
install.packages("topicmodeling")
install.packages("topicmodels")
install.packages("tm")
install.packages("tidytext")
install.packages("quanteda")
install.packages("coefficientalpha")
install.packages(c("cachem", "ipmisc", "mime", "rstatix"))
install.packages("blockmodeling")
install.packages(c("insight", "lifecycle", "testthat", "WRS2"))
install.packages(c("rmarkdown", "SparseM"))
install.packages("data.table")
install.packages(c("ggraph", "ggsignif", "insight", "parameters", "pillar", "pkgload"))
install.packages("cli")
install.packages(c("ISOcodes", "quantreg", "RcppParallel"))
install.packages("tibble")
install.packages("lubridate")
notas <- rnorm(100, 3, 0.5)
notas <- rnorm(100, 4, 0.8)
notas <- rnorm(100, 3, 0.5)
notas <- rnorm(100, 4, 0.8)
nombres <- c("Carlos", "Juan", "Ana")
nombres2<-c("Carlos", "Juan", "Ana")
# Example 1
library(quanteda)
load("/home/juan/Comments.RData")
my_corpus <- corpus(Comments$text)
mycorpus <- data.frame(summary(my_corpus, n = nrow(Comments)))
summary(my_corpus)
spanishstopwords <- c("q", stopwords("spanish"))
Restaurant <- dfm(corpus(
my_corpus),
remove_numbers = TRUE,
remove = spanishstopwords,
stem = TRUE, remove_punct = TRUE)
restaurant <- textstat_simil(Restaurant,
margin = "documents",
method = "jaccard")
restaurantdf <- data.frame(as.matrix(restaurant))
restaurantdf[is.na(restaurantdf)] = 0
restaurant <- data.frame(jaccard = restaurant[lower.tri(restaurant, diag = FALSE)])
library(clustertend)
set.seed(123)
hopkins(restaurantdf, n = nrow(restaurantdf)/10)
View(Comments)
View(mycorpus)
View(restaurant)
rnorm(1000, 10.8, 2.3)
numerosaleatorios <- rnorm(1000, 10.8, 2.3)
# Vamos a crear un primer script
# Por ejemplo, vamos a crear numeros aleatorios
NumerosAleatorios <- rnorm(1000, 5, 2.3)
NumerosAleatorios2 <- rnorm(n = 1000, mean = 3.2, sd = 1.2)
# Vamos a crear un primer script
# Por ejemplo, vamos a crear numeros aleatorios
Objeto1 <- rnorm(1000, 5, 2.3)
Objeto2 <- rnorm(n = 1000, mean = 3.2, sd = 1.2)
mean(Objeto1)
sd(Objeto1)
mean(Objeto2)
sd(Objeto2)
# Vamos a crear un primer script
# Por ejemplo, vamos a crear numeros aleatorios
Objeto1 <- rnorm(1000, 5, 2.3)
Objeto2 <- rnorm(n = 1000, mean = 3.2, sd = 1.2)
mean(Objeto1)
sd(Objeto1)
mean(Objeto2)
sd(Objeto2)
(3+4+5+6+7)/5
veamos <- c(3,4,5,6,7)
mean(veamos)
mean(veamos) == (3+4+5+6+7)/5
mean(veamos) == (3+4+5+6+7)/5.1
mean(3,4,5,6,7)
mean(4,5,6,7)
mean(5,6,7)
mean(6,7)
mean(7)
mean(c(3,4,5,6,7))
install.packages("e1071")
rnorm(40,29,5.3)
DDC <- c(40,29,5.3)
mean(DDC)
max(DDC)
40+29+5.3/3
(40+29+5.3)/3
boxplot(DDC)
datos <- rnorm(2000,71,2.05)
Promedio <- mean(datos)
Promedio
SD <- sd(datos,na.rm = FALSE)
SD
LS <- Promedio + 3*SD
LS
LI <- Promedio - 3*SD
LI
Rango <- LS-LI
Rango
SD <- sd(datos,na.rm = FALSE)
SD
LS <- Promedio + 3*SD
LS
LI <- Promedio - 3*SD
LI
Rango <- LS-LI
Rango
Rango
install.packages(c("farver", "MatrixModels", "ps", "rio"))
library(readxl)
raw_interactions <- read_excel("Documents/Food/raw_interactions.xls")
View(raw_interactions)
variable.names(raw_interactions)
library(readr)
muestra <- read_csv("Documents/Food/muestra.csv")
View(muestra)
variable.names(muestra)
str(muestra)
str(muestra$X1)
class(muestra$X1)
# Example 1
library(quanteda)
load("/home/juan/Comments.RData")
my_corpus <- corpus(Comments$text)
mycorpus <- data.frame(summary(my_corpus, n = nrow(Comments)))
summary(my_corpus)
spanishstopwords <- c("q", stopwords("spanish"))
Restaurant <- dfm(corpus(
my_corpus),
remove_numbers = TRUE,
remove = spanishstopwords,
stem = TRUE, remove_punct = TRUE)
restaurant <- textstat_simil(Restaurant,
margin = "documents",
method = "jaccard")
restaurantdf <- data.frame(as.matrix(restaurant))
restaurantdf[is.na(restaurantdf)] = 0
restaurant <- data.frame(jaccard = restaurant[lower.tri(restaurant, diag = FALSE)])
library(clustertend)
set.seed(123)
hopkins(restaurantdf, n = nrow(restaurantdf)/10)
library(mclust)
fit <- Mclust(restaurantdf)
summary(fit)
clasificados <- data.frame(fit$classification)
names(clasificados)[1] <- "classification"
clasificados$Category <- "restaurant"
library(topicmodels)
restaurantC <- convert(Restaurant, to = "topicmodels", docvars = NULL)
pave <- LDA(restaurantC, k = 9)
library(tidytext)
restaurant_topics <- tidy(pave, matrix = "beta")
restaurant_topics$Category <- "restaurant"
library(broom)
EssentialWordsrestaurant <- tidy(pave)
library(dplyr)
topics <- EssentialWordsrestaurant %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
library(igraph)
g_rest <- graph.data.frame(topics, directed = FALSE)
bipartite.mapping(g_rest)
V(g_rest)$type <- bipartite_mapping(g_rest)$type
V(g_rest)$color <- ifelse(V(g_rest)$type, "lightblue", "red")
V(g_rest)$shape <- ifelse(V(g_rest)$type, "circle", "square")
E(g_rest)$color <- "black"
V(g_rest)$size <- eccentricity(g_rest) * 2.5
V(g_rest)$label.cex <- degree(g_rest) * 2.5
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
V(g_rest)$size <- eccentricity(g_rest) * 2
V(g_rest)$label.cex <- degree(g_rest) * 2.5
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
rnorm(100, 4, 2)
setwd("~/Documents/GitHub/Pantaleon")
library(readxl)
PantaleonData <- read_excel("data 19-20.xlsx")
View(PantaleonData)
View(PantaleonData)
boxplot(PantaleonData$TCH ~ PantaleonData$Estacion)
boxplot(PantaleonData$TCH ~ PantaleonData$EstaciÃ³n)
names(PantaleonData)[8] <- "Estacion"
View(PantaleonData)
boxplot(PantaleonData$TCH ~ PantaleonData$Estacion)
boxplot(PantaleonData$TCH ~ PantaleonData$Estacion)
View(PantaleonData)
boxplot(PantaleonData$TCH ~ PantaleonData$Estacion)
